id: display_lcd_display
label: Lcd display
flags: [ python ]

category: '[Custom]/Display'

parameters:
- id: num_digits
  label: Num_digits
  dtype: int
  default: 6
- id: min_value
  label: Minimum
  dtype: float
- id: max_value
  label: Maximum
  dtype: float
- id: value
  label: Value
  dtype: float
  default: 1000.
- id: min_step
  label: Min_step
  dtype: int
- id: unit_type
  label: Unit_type
  dtype: enum
  default: '1'
  options: ['0','1','2','3','4','5','6','7']
  option_labels: ['Hz','KHz','MHz','GHz','Sec','mSec','uSec','nSec']
- id: freqoffset
  label: Frequency offset
  dtype: float
  default: 0
- id: gui_hint
  label: GUI Hint
  dtype: gui_hint
  hide: part


inputs:
-   domain: message
    id: freq
    optional: true

outputs:
-   domain: message
    id: freq
    optional: true

templates:
    imports: |-
            from PyQt5 import Qt
            from gnuradio import qtgui
            import display
            import sip

    make: |-
        <%
           win = 'self._%s_win'%id
        %>\
        display.lcd_display(${num_digits}, ${min_value}, ${max_value},${value},${min_step},${unit_type},${freqoffset})
        self._${id}_win = sip.wrapinstance(self.${id}.pyqwidget(), Qt.QWidget)
        ${gui_hint() % win}

file_format: 1
